{
  "contractName": "ERC677BridgeToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_name",
          "type": "string"
        },
        {
          "name": "_symbol",
          "type": "string"
        },
        {
          "name": "_decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "bridgeContract",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_bridgeContract",
          "type": "address"
        }
      ],
      "name": "setBridgeContract",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "transferAndCall",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTokenInterfacesVersion",
      "outputs": [
        {
          "name": "major",
          "type": "uint64"
        },
        {
          "name": "minor",
          "type": "uint64"
        },
        {
          "name": "patch",
          "type": "uint64"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "isBridge",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finishMinting",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "claimTokens",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040526006805460a060020a60ff02191690553480156200002157600080fd5b50604051620015a3380380620015a38339810160409081528151602080840151928401519184018051909493909301928491849184916200006891600091860190620000b2565b5081516200007e906001906020850190620000b2565b506002805460ff90921660ff19909216919091179055505060068054600160a060020a031916331790555062000157915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620000f557805160ff191683800117855562000125565b8280016001018555821562000125579182015b828111156200012557825182559160200191906001019062000108565b506200013392915062000137565b5090565b6200015491905b808211156200013357600081556001016200013e565b90565b61143c80620001676000396000f30060806040526004361061013a5763ffffffff60e060020a60003504166305d2035b811461013f57806306fdde0314610168578063095ea7b3146101f25780630b26cf661461021657806318160ddd1461023957806323b872dd14610260578063313ce5671461028a57806339509351146102b55780634000aea0146102d957806340c10f191461030a57806342966c681461032e578063661884631461034657806369ffa08a1461036a57806370a0823114610391578063715018a6146103b2578063726600ce146103c75780637d64bcb4146103e8578063859ba28c146103fd5780638da5cb5b1461043e57806395d89b411461046f578063a457c2d714610484578063a9059cbb146104a8578063cd596583146104cc578063d73dd623146104e1578063dd62ed3e14610505578063f2fde38b1461052c575b600080fd5b34801561014b57600080fd5b5061015461054d565b604080519115158252519081900360200190f35b34801561017457600080fd5b5061017d61056e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b757818101518382015260200161019f565b50505050905090810190601f1680156101e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fe57600080fd5b50610154600160a060020a03600435166024356105fc565b34801561022257600080fd5b50610237600160a060020a0360043516610662565b005b34801561024557600080fd5b5061024e6106bc565b60408051918252519081900360200190f35b34801561026c57600080fd5b50610154600160a060020a03600435811690602435166044356106c2565b34801561029657600080fd5b5061029f6106ef565b6040805160ff9092168252519081900360200190f35b3480156102c157600080fd5b50610154600160a060020a03600435166024356106f8565b3480156102e557600080fd5b5061015460048035600160a060020a031690602480359160443591820191013561070b565b34801561031657600080fd5b50610154600160a060020a036004351660243561081c565b34801561033a57600080fd5b50610237600435610927565b34801561035257600080fd5b50610154600160a060020a0360043516602435610934565b34801561037657600080fd5b50610237600160a060020a0360043581169060243516610a23565b34801561039d57600080fd5b5061024e600160a060020a0360043516610a48565b3480156103be57600080fd5b50610237610a63565b3480156103d357600080fd5b50610154600160a060020a0360043516610a7a565b3480156103f457600080fd5b50610154610a8e565b34801561040957600080fd5b50610412610a95565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561044a57600080fd5b50610453610aa0565b60408051600160a060020a039092168252519081900360200190f35b34801561047b57600080fd5b5061017d610aaf565b34801561049057600080fd5b50610154600160a060020a0360043516602435610b09565b3480156104b457600080fd5b50610154600160a060020a0360043516602435610b15565b3480156104d857600080fd5b50610453610b40565b3480156104ed57600080fd5b50610154600160a060020a0360043516602435610b4f565b34801561051157600080fd5b5061024e600160a060020a0360043581169060243516610be8565b34801561053857600080fd5b50610237600160a060020a0360043516610c13565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600654600160a060020a0316331461067957600080fd5b61068281610c33565b151561068d57600080fd5b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60045490565b60006106cf848484610c3b565b15156106da57600080fd5b6106e5848484610da0565b5060019392505050565b60025460ff1681565b60006107048383610b4f565b9392505050565b600084600160a060020a0381161580159061072f5750600160a060020a0381163014155b151561073a57600080fd5b6107448686610ddc565b151561074f57600080fd5b85600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16878787604051808481526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a36107c486610c33565b156108105761080533878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750610de8945050505050565b151561081057600080fd5b50600195945050505050565b600654600090600160a060020a0316331461083657600080fd5b60065474010000000000000000000000000000000000000000900460ff161561085e57600080fd5b600454610871908363ffffffff610f6516565b600455600160a060020a03831660009081526003602052604090205461089d908363ffffffff610f6516565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000916000805160206113f18339815191529181900360200190a350600192915050565b6109313382610f78565b50565b336000908152600560209081526040808320600160a060020a038616845290915281205480831061098857336000908152600560209081526040808320600160a060020a03881684529091528120556109bd565b610998818463ffffffff61106716565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600654600160a060020a03163314610a3a57600080fd5b610a448282611079565b5050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a0316331461013a57600080fd5b600754600160a060020a0390811691161490565b6000806000fd5b600260056000909192565b600654600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f45780601f106105c9576101008083540402835291602001916105f4565b60006107048383610934565b6000610b218383610ddc565b1515610b2c57600080fd5b610b37338484610da0565b50600192915050565b600754600160a060020a031690565b336000908152600560209081526040808320600160a060020a0386168452909152812054610b83908363ffffffff610f6516565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600654600160a060020a03163314610c2a57600080fd5b610931816110b7565b6000903b1190565b600160a060020a038316600090815260036020526040812054821115610c6057600080fd5b600160a060020a0384166000908152600560209081526040808320338452909152902054821115610c9057600080fd5b600160a060020a0383161515610ca557600080fd5b600160a060020a038416600090815260036020526040902054610cce908363ffffffff61106716565b600160a060020a038086166000908152600360205260408082209390935590851681522054610d03908363ffffffff610f6516565b600160a060020a038085166000908152600360209081526040808320949094559187168152600582528281203382529091522054610d47908363ffffffff61106716565b600160a060020a03808616600081815260056020908152604080832033845282529182902094909455805186815290519287169391926000805160206113f1833981519152929181900390910190a35060019392505050565b610da982610a7a565b15610dd757604080516000815260208101909152610dcc90849084908490610de8565b1515610dd757600080fd5b505050565b60006107048383611135565b600083600160a060020a031663a4c0ed3660e060020a028685856040516024018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610e60578181015183820152602001610e48565b50505050905090810190601f168015610e8d5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909916989098178852518151919790965086955093509150819050838360005b83811015610f1b578181015183820152602001610f03565b50505050905090810190601f168015610f485780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1979650505050505050565b81810182811015610f7257fe5b92915050565b600160a060020a038216600090815260036020526040902054811115610f9d57600080fd5b600160a060020a038216600090815260036020526040902054610fc6908263ffffffff61106716565b600160a060020a038316600090815260036020526040902055600454610ff2908263ffffffff61106716565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206113f18339815191529181900360200190a35050565b60008282111561107357fe5b50900390565b80600160a060020a038116151561108f57600080fd5b600160a060020a03831615156110ad576110a882611204565b610dd7565b610dd78383611210565b600160a060020a03811615156110cc57600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b3360009081526003602052604081205482111561115157600080fd5b600160a060020a038316151561116657600080fd5b33600090815260036020526040902054611186908363ffffffff61106716565b3360009081526003602052604080822092909255600160a060020a038516815220546111b8908363ffffffff610f6516565b600160a060020a0384166000818152600360209081526040918290209390935580518581529051919233926000805160206113f18339815191529281900390910190a350600192915050565b3031610a4482826112c3565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561127557600080fd5b505af1158015611289573d6000803e3d6000fd5b505050506040513d602081101561129f57600080fd5b505190506112bd600160a060020a038516848363ffffffff61132b16565b50505050565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610a445780826112f86113c0565b600160a060020a039091168152604051908190036020019082f080158015611324573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561138e57600080fd5b505af11580156113a2573d6000803e3d6000fd5b505050503d15610dd75760206000803e6000511515610dd757600080fd5b6040516021806113d0833901905600608060405260405160208060218339810160405251600160a060020a038116ff00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820e8f89bf1138450ccd74d72d8137d871d9940e4336f2700c8c6ba2ed49600f51e0029",
  "deployedBytecode": "0x60806040526004361061013a5763ffffffff60e060020a60003504166305d2035b811461013f57806306fdde0314610168578063095ea7b3146101f25780630b26cf661461021657806318160ddd1461023957806323b872dd14610260578063313ce5671461028a57806339509351146102b55780634000aea0146102d957806340c10f191461030a57806342966c681461032e578063661884631461034657806369ffa08a1461036a57806370a0823114610391578063715018a6146103b2578063726600ce146103c75780637d64bcb4146103e8578063859ba28c146103fd5780638da5cb5b1461043e57806395d89b411461046f578063a457c2d714610484578063a9059cbb146104a8578063cd596583146104cc578063d73dd623146104e1578063dd62ed3e14610505578063f2fde38b1461052c575b600080fd5b34801561014b57600080fd5b5061015461054d565b604080519115158252519081900360200190f35b34801561017457600080fd5b5061017d61056e565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b757818101518382015260200161019f565b50505050905090810190601f1680156101e45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101fe57600080fd5b50610154600160a060020a03600435166024356105fc565b34801561022257600080fd5b50610237600160a060020a0360043516610662565b005b34801561024557600080fd5b5061024e6106bc565b60408051918252519081900360200190f35b34801561026c57600080fd5b50610154600160a060020a03600435811690602435166044356106c2565b34801561029657600080fd5b5061029f6106ef565b6040805160ff9092168252519081900360200190f35b3480156102c157600080fd5b50610154600160a060020a03600435166024356106f8565b3480156102e557600080fd5b5061015460048035600160a060020a031690602480359160443591820191013561070b565b34801561031657600080fd5b50610154600160a060020a036004351660243561081c565b34801561033a57600080fd5b50610237600435610927565b34801561035257600080fd5b50610154600160a060020a0360043516602435610934565b34801561037657600080fd5b50610237600160a060020a0360043581169060243516610a23565b34801561039d57600080fd5b5061024e600160a060020a0360043516610a48565b3480156103be57600080fd5b50610237610a63565b3480156103d357600080fd5b50610154600160a060020a0360043516610a7a565b3480156103f457600080fd5b50610154610a8e565b34801561040957600080fd5b50610412610a95565b6040805167ffffffffffffffff9485168152928416602084015292168183015290519081900360600190f35b34801561044a57600080fd5b50610453610aa0565b60408051600160a060020a039092168252519081900360200190f35b34801561047b57600080fd5b5061017d610aaf565b34801561049057600080fd5b50610154600160a060020a0360043516602435610b09565b3480156104b457600080fd5b50610154600160a060020a0360043516602435610b15565b3480156104d857600080fd5b50610453610b40565b3480156104ed57600080fd5b50610154600160a060020a0360043516602435610b4f565b34801561051157600080fd5b5061024e600160a060020a0360043581169060243516610be8565b34801561053857600080fd5b50610237600160a060020a0360043516610c13565b60065474010000000000000000000000000000000000000000900460ff1681565b6000805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f45780601f106105c9576101008083540402835291602001916105f4565b820191906000526020600020905b8154815290600101906020018083116105d757829003601f168201915b505050505081565b336000818152600560209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600654600160a060020a0316331461067957600080fd5b61068281610c33565b151561068d57600080fd5b6007805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b60045490565b60006106cf848484610c3b565b15156106da57600080fd5b6106e5848484610da0565b5060019392505050565b60025460ff1681565b60006107048383610b4f565b9392505050565b600084600160a060020a0381161580159061072f5750600160a060020a0381163014155b151561073a57600080fd5b6107448686610ddc565b151561074f57600080fd5b85600160a060020a031633600160a060020a03167fe19260aff97b920c7df27010903aeb9c8d2be5d310a2c67824cf3f15396e4c16878787604051808481526020018060200182810382528484828181526020019250808284376040519201829003965090945050505050a36107c486610c33565b156108105761080533878787878080601f01602080910402602001604051908101604052809392919081815260200183838082843750610de8945050505050565b151561081057600080fd5b50600195945050505050565b600654600090600160a060020a0316331461083657600080fd5b60065474010000000000000000000000000000000000000000900460ff161561085e57600080fd5b600454610871908363ffffffff610f6516565b600455600160a060020a03831660009081526003602052604090205461089d908363ffffffff610f6516565b600160a060020a038416600081815260036020908152604091829020939093558051858152905191927f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d412139688592918290030190a2604080518381529051600160a060020a038516916000916000805160206113f18339815191529181900360200190a350600192915050565b6109313382610f78565b50565b336000908152600560209081526040808320600160a060020a038616845290915281205480831061098857336000908152600560209081526040808320600160a060020a03881684529091528120556109bd565b610998818463ffffffff61106716565b336000908152600560209081526040808320600160a060020a03891684529091529020555b336000818152600560209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600654600160a060020a03163314610a3a57600080fd5b610a448282611079565b5050565b600160a060020a031660009081526003602052604090205490565b600654600160a060020a0316331461013a57600080fd5b600754600160a060020a0390811691161490565b6000806000fd5b600260056000909192565b600654600160a060020a031681565b60018054604080516020600284861615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156105f45780601f106105c9576101008083540402835291602001916105f4565b60006107048383610934565b6000610b218383610ddc565b1515610b2c57600080fd5b610b37338484610da0565b50600192915050565b600754600160a060020a031690565b336000908152600560209081526040808320600160a060020a0386168452909152812054610b83908363ffffffff610f6516565b336000818152600560209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260056020908152604080832093909416825291909152205490565b600654600160a060020a03163314610c2a57600080fd5b610931816110b7565b6000903b1190565b600160a060020a038316600090815260036020526040812054821115610c6057600080fd5b600160a060020a0384166000908152600560209081526040808320338452909152902054821115610c9057600080fd5b600160a060020a0383161515610ca557600080fd5b600160a060020a038416600090815260036020526040902054610cce908363ffffffff61106716565b600160a060020a038086166000908152600360205260408082209390935590851681522054610d03908363ffffffff610f6516565b600160a060020a038085166000908152600360209081526040808320949094559187168152600582528281203382529091522054610d47908363ffffffff61106716565b600160a060020a03808616600081815260056020908152604080832033845282529182902094909455805186815290519287169391926000805160206113f1833981519152929181900390910190a35060019392505050565b610da982610a7a565b15610dd757604080516000815260208101909152610dcc90849084908490610de8565b1515610dd757600080fd5b505050565b60006107048383611135565b600083600160a060020a031663a4c0ed3660e060020a028685856040516024018084600160a060020a0316600160a060020a0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015610e60578181015183820152602001610e48565b50505050905090810190601f168015610e8d5780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909916989098178852518151919790965086955093509150819050838360005b83811015610f1b578181015183820152602001610f03565b50505050905090810190601f168015610f485780820380516001836020036101000a031916815260200191505b509150506000604051808303816000865af1979650505050505050565b81810182811015610f7257fe5b92915050565b600160a060020a038216600090815260036020526040902054811115610f9d57600080fd5b600160a060020a038216600090815260036020526040902054610fc6908263ffffffff61106716565b600160a060020a038316600090815260036020526040902055600454610ff2908263ffffffff61106716565b600455604080518281529051600160a060020a038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a2604080518281529051600091600160a060020a038516916000805160206113f18339815191529181900360200190a35050565b60008282111561107357fe5b50900390565b80600160a060020a038116151561108f57600080fd5b600160a060020a03831615156110ad576110a882611204565b610dd7565b610dd78383611210565b600160a060020a03811615156110cc57600080fd5b600654604051600160a060020a038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a36006805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b3360009081526003602052604081205482111561115157600080fd5b600160a060020a038316151561116657600080fd5b33600090815260036020526040902054611186908363ffffffff61106716565b3360009081526003602052604080822092909255600160a060020a038516815220546111b8908363ffffffff610f6516565b600160a060020a0384166000818152600360209081526040918290209390935580518581529051919233926000805160206113f18339815191529281900390910190a350600192915050565b3031610a4482826112c3565b604080517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015290518391600091600160a060020a038416916370a0823191602480830192602092919082900301818787803b15801561127557600080fd5b505af1158015611289573d6000803e3d6000fd5b505050506040513d602081101561129f57600080fd5b505190506112bd600160a060020a038516848363ffffffff61132b16565b50505050565b604051600160a060020a0383169082156108fc029083906000818181858888f193505050501515610a445780826112f86113c0565b600160a060020a039091168152604051908190036020019082f080158015611324573d6000803e3d6000fd5b5050505050565b82600160a060020a031663a9059cbb83836040518363ffffffff1660e060020a0281526004018083600160a060020a0316600160a060020a0316815260200182815260200192505050600060405180830381600087803b15801561138e57600080fd5b505af11580156113a2573d6000803e3d6000fd5b505050503d15610dd75760206000803e6000511515610dd757600080fd5b6040516021806113d0833901905600608060405260405160208060218339810160405251600160a060020a038116ff00ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa165627a7a72305820e8f89bf1138450ccd74d72d8137d871d9940e4336f2700c8c6ba2ed49600f51e0029",
  "sourceMap": "511:4107:0:-;;;436:35:136;;;-1:-1:-1;;;;;;436:35:136;;;778:171:0;5:2:-1;;;;30:1;27;20:12;5:2;778:171:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;463:12:133;;778:171:0;;;;;;;;;;;;;463:12:133;;:4;;:12;;;;:::i;:::-;-1:-1:-1;481:16:133;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;503:8:133;:20;;;;;;-1:-1:-1;;503:20:133;;;;;;;;;-1:-1:-1;;567:5:130;:18;;-1:-1:-1;;;;;;567:18:130;575:10;567:18;;;-1:-1:-1;511:4107:0;;-1:-1:-1;;511:4107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;511:4107:0;;;-1:-1:-1;511:4107:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "511:4107:0:-;;;;;;;;;-1:-1:-1;;;511:4107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:35:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:35:136;;;;;;;;;;;;;;;;;;;;;;319:18:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;319:18:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;319:18:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1814:188:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1814:188:137;-1:-1:-1;;;;;1814:188:137;;;;;;;1061:183:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1061:183:0;-1:-1:-1;;;;;1061:183:0;;;;;;;389:83:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;389:83:131;;;;;;;;;;;;;;;;;;;;2270:220:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2270:220:0;-1:-1:-1;;;;;2270:220:0;;;;;;;;;;;;365:21:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;365:21:133;;;;;;;;;;;;;;;;;;;;;;;4294:153:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4294:153:0;-1:-1:-1;;;;;4294:153:0;;;;;;;1425:365;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1425:365:0;;;;-1:-1:-1;;;;;1425:365:0;;;;;;;;;;;;;;;;854:312:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;854:312:136;-1:-1:-1;;;;;854:312:136;;;;;;;353:73:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;353:73:132;;;;;3679:432:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3679:432:137;-1:-1:-1;;;;;3679:432:137;;;;;;;4178:110:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4178:110:0;-1:-1:-1;;;;;4178:110:0;;;;;;;;;;1149:99:131;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1149:99:131;-1:-1:-1;;;;;1149:99:131;;;;;3872:71:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3872:71:0;;;;3176:117;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3176:117:0;-1:-1:-1;;;;;3176:117:0;;;;;3794:72;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3794:72:0;;;;1796:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1796:135:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;238:20:130;;;;;;;;-1:-1:-1;;;;;238:20:130;;;;;;;;;;;;;;341::133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:20:133;;;;4453:163:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4453:163:0;-1:-1:-1;;;;;4453:163:0;;;;;;;2070:194;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2070:194:0;-1:-1:-1;;;;;2070:194:0;;;;;;;955:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;955:100:0;;;;2926:296:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2926:296:137;-1:-1:-1;;;;;2926:296:137;;;;;;;2321:153;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2321:153:137;-1:-1:-1;;;;;2321:153:137;;;;;;;;;;1274:103:130;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1274:103:130;-1:-1:-1;;;;;1274:103:130;;;;;436:35:136;;;;;;;;;:::o;319:18:133:-;;;;;;;;;;;;;;;-1:-1:-1;;319:18:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1814:188:137:-;1901:10;1881:4;1893:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1893:29:137;;;;;;;;;;;:38;;;1942;;;;;;;1881:4;;1893:29;;1901:10;;1942:38;;;;;;;;-1:-1:-1;1993:4:137;1814:188;;;;:::o;1061:183:0:-;719:5:130;;-1:-1:-1;;;;;719:5:130;705:10;:19;697:28;;;;;;1150:40:0;1174:15;1150:23;:40::i;:::-;1142:49;;;;;;;;1201:18;:36;;-1:-1:-1;;1201:36:0;-1:-1:-1;;;;;1201:36:0;;;;;;;;;;1061:183::o;389:83:131:-;455:12;;389:83;:::o;2270:220:0:-;2352:4;2376:38;2395:5;2402:3;2407:6;2376:18;:38::i;:::-;2368:47;;;;;;;;2425:37;2443:5;2450:3;2455:6;2425:17;:37::i;:::-;-1:-1:-1;2479:4:0;2270:220;;;;;:::o;365:21:133:-;;;;;;:::o;4294:153:0:-;4374:4;4397:43;4420:7;4429:10;4397:22;:43::i;:::-;4390:50;4294:153;-1:-1:-1;;;4294:153:0:o;1425:365::-;1530:4;1516:3;-1:-1:-1;;;;;1312:24:0;;;;;;:55;;-1:-1:-1;;;;;;1340:27:0;;1362:4;1340:27;;1312:55;1304:64;;;;;;;;1554:26;1568:3;1573:6;1554:13;:26::i;:::-;1546:35;;;;;;;;1617:3;-1:-1:-1;;;;;1596:40:0;1605:10;-1:-1:-1;;;;;1596:40:0;;1622:6;1630:5;;1596:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1596:40:0;;-1:-1:-1;;;;;1596:40:0;1651:28;1675:3;1651:23;:28::i;:::-;1647:116;;;1703:48;1720:10;1732:3;1737:6;1745:5;;1703:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1703:16:0;;-1:-1:-1;;;;;1703:48:0:i;:::-;1695:57;;;;;;;;-1:-1:-1;1779:4:0;;1425:365;-1:-1:-1;;;;;1425:365:0:o;854:312:136:-;600:5;;968:4;;-1:-1:-1;;;;;600:5:136;586:10;:19;578:28;;;;;;511:15;;;;;;;510:16;502:25;;;;;;997:12;;:25;;1014:7;997:25;:16;:25;:::i;:::-;982:12;:40;-1:-1:-1;;;;;1044:13:136;;;;;;:8;:13;;;;;;:26;;1062:7;1044:26;:17;:26;:::i;:::-;-1:-1:-1;;;;;1028:13:136;;;;;;:8;:13;;;;;;;;;:42;;;;1081:18;;;;;;;1028:13;;1081:18;;;;;;;;;1110:34;;;;;;;;-1:-1:-1;;;;;1110:34:136;;;1127:1;;-1:-1:-1;;;;;;;;;;;1110:34:136;;;;;;;;-1:-1:-1;1157:4:136;854:312;;;;:::o;353:73:132:-;396:25;402:10;414:6;396:5;:25::i;:::-;353:73;:::o;3679:432:137:-;3826:10;3785:4;3818:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3818:29:137;;;;;;;;;;3857:28;;;3853:165;;3903:10;3927:1;3895:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3895:29:137;;;;;;;;;:33;3853:165;;;3981:30;:8;3994:16;3981:30;:12;:30;:::i;:::-;3957:10;3949:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3949:29:137;;;;;;;;;:62;3853:165;4037:10;4059:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4028:61:137;;4059:29;;;;;;;;;;;4028:61;;;;;;;;;4037:10;4028:61;;;;;;;;;;;-1:-1:-1;4102:4:137;;3679:432;-1:-1:-1;;;3679:432:137:o;4178:110:0:-;719:5:130;;-1:-1:-1;;;;;719:5:130;705:10;:19;697:28;;;;;;4257:24:0;4269:6;4277:3;4257:11;:24::i;:::-;4178:110;;:::o;1149:99:131:-;-1:-1:-1;;;;;1227:16:131;1205:7;1227:16;;;:8;:16;;;;;;;1149:99::o;3872:71:0:-;719:5:130;;-1:-1:-1;;;;;719:5:130;705:10;:19;697:28;;;;;3176:117:0;3268:18;;-1:-1:-1;;;;;3268:18:0;;;3256:30;;;;3176:117::o;3794:72::-;3835:4;3851:8;;;1796:135;1916:1;1919;1856:12;1796:135;;;:::o;238:20:130:-;;;-1:-1:-1;;;;;238:20:130;;:::o;341::133:-;;;;;;;;;;;;;;;-1:-1:-1;;341:20:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4453:163:0;4538:4;4561:48;4584:7;4593:15;4561:22;:48::i;2070:194::-;2133:4;2157:26;2171:3;2176:6;2157:13;:26::i;:::-;2149:35;;;;;;;;2194:42;2212:10;2224:3;2229:6;2194:17;:42::i;:::-;-1:-1:-1;2253:4:0;2070:194;;;;:::o;955:100::-;1030:18;;-1:-1:-1;;;;;1030:18:0;955:100;:::o;2926:296:137:-;3089:10;3027:4;3081:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3081:29:137;;;;;;;;;;:46;;3115:11;3081:46;:33;:46;:::i;:::-;3049:10;3041:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3041:29:137;;;;;;;;;;;;:87;;;3139:61;;;;;;3041:29;;3139:61;;;;;;;;;;;-1:-1:-1;3213:4:137;2926:296;;;;:::o;2321:153::-;-1:-1:-1;;;;;2444:15:137;;;2420:7;2444:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2321:153::o;1274:103:130:-;719:5;;-1:-1:-1;;;;;719:5:130;705:10;:19;697:28;;;;;;1343:29;1362:9;1343:18;:29::i;438:578:128:-;496:4;971:18;;1003:8;;438:578::o;726:470:137:-;-1:-1:-1;;;;;864:15:137;;832:4;864:15;;;:8;:15;;;;;;854:25;;;846:34;;;;;;-1:-1:-1;;;;;904:14:137;;;;;;:7;:14;;;;;;;;919:10;904:26;;;;;;;;894:36;;;886:45;;;;;;-1:-1:-1;;;;;945:17:137;;;;937:26;;;;;;-1:-1:-1;;;;;988:15:137;;;;;;:8;:15;;;;;;:27;;1008:6;988:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;970:15:137;;;;;;;:8;:15;;;;;;:45;;;;1037:13;;;;;;;:25;;1055:6;1037:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1021:13:137;;;;;;;:8;:13;;;;;;;;:41;;;;1097:14;;;;;:7;:14;;;;;1112:10;1097:26;;;;;;;:38;;1128:6;1097:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1068:14:137;;;;;;;:7;:14;;;;;;;;1083:10;1068:26;;;;;;;;:67;;;;1146:28;;;;;;;;;;;1068:14;;-1:-1:-1;;;;;;;;;;;1146:28:137;;;;;;;;;;-1:-1:-1;1187:4:137;726:470;;;;;:::o;2971:199:0:-;3065:13;3074:3;3065:8;:13::i;:::-;3061:103;;;3139:12;;;3149:1;3139:12;;;;;;;;3102:50;;3119:5;;3126:3;;3131:6;;3102:16;:50::i;:::-;3094:59;;;;;;;;2971:199;;;:::o;1937:127::-;2007:4;2030:27;2045:3;2050:6;2030:14;:27::i;3585:203::-;3685:4;3708:3;-1:-1:-1;;;;;3708:8:0;677:10;-1:-1:-1;;;3740:17:0;3759:5;3766:6;3774:5;3717:63;;;;;;-1:-1:-1;;;;;3717:63:0;-1:-1:-1;;;;;3717:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3717:63:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3717:63:0;;;-1:-1:-1;;26:21;;;22:32;6:49;;3717:63:0;;;49:4:-1;25:18;;61:17;;3717:63:0;182:15:-1;3717:63:0;;;;179:29:-1;;;;160:49;;3708:73:0;;;3717:63;;3708:73;;-1:-1:-1;3708:73:0;;-1:-1:-1;25:18;-1:-1;3708:73:0;-1:-1:-1;3708:73:0;;-1:-1:-1;3708:73:0;25:18:-1;-1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3708:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3585:203;-1:-1:-1;;;;;;;3585:203:0:o;1238:128:129:-;1319:7;;;1339;;;;1332:15;;;;1238:128;;;;:::o;430:438:132:-;-1:-1:-1;;;;;508:14:132;;;;;;:8;:14;;;;;;498:24;;;490:33;;;;;;-1:-1:-1;;;;;718:14:132;;;;;;:8;:14;;;;;;:26;;737:6;718:26;:18;:26;:::i;:::-;-1:-1:-1;;;;;701:14:132;;;;;;:8;:14;;;;;:43;765:12;;:24;;782:6;765:24;:16;:24;:::i;:::-;750:12;:39;800:18;;;;;;;;-1:-1:-1;;;;;800:18:132;;;;;;;;;;;;;829:34;;;;;;;;852:1;;-1:-1:-1;;;;;829:34:132;;;-1:-1:-1;;;;;;;;;;;829:34:132;;;;;;;;430:438;;:::o;1060:116:129:-;1120:7;1142:8;;;;1135:16;;;;-1:-1:-1;1164:7:129;;;1060:116::o;892:225:80:-;964:3;-1:-1:-1;;;;;455:17:80;;;;447:26;;;;;;-1:-1:-1;;;;;983:20:80;;;979:132;;;1019:21;1036:3;1019:16;:21::i;:::-;979:132;;;1071:29;1088:6;1096:3;1071:16;:29::i;1512:171:130:-;-1:-1:-1;;;;;1582:23:130;;;;1574:32;;;;;;1638:5;;1617:38;;-1:-1:-1;;;;;1617:38:130;;;;1638:5;;1617:38;;1638:5;;1617:38;1661:5;:17;;-1:-1:-1;;1661:17:130;-1:-1:-1;;;;;1661:17:130;;;;;;;;;;1512:171::o;626:321:131:-;728:10;689:4;719:20;;;:8;:20;;;;;;709:30;;;701:39;;;;;;-1:-1:-1;;;;;754:17:131;;;;746:26;;;;;;811:10;802:20;;;;:8;:20;;;;;;:32;;827:6;802:32;:24;:32;:::i;:::-;788:10;779:20;;;;:8;:20;;;;;;:55;;;;-1:-1:-1;;;;;856:13:131;;;;;;:25;;874:6;856:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;840:13:131;;;;;;:8;:13;;;;;;;;;:41;;;;892:33;;;;;;;840:13;;901:10;;-1:-1:-1;;;;;;;;;;;892:33:131;;;;;;;;;-1:-1:-1;938:4:131;626:321;;;;:::o;1270:145:80:-;1352:4;1344:21;1375:33;1397:3;1344:21;1375;:33::i;1656:210::-;1795:21;;;;;;1811:4;1795:21;;;;;;1760:6;;1730:16;;-1:-1:-1;;;;;1795:15:80;;;;;:21;;;;;;;;;;;;;;1730:16;1795:15;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;1795:21:80;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1795:21:80;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1795:21:80;;-1:-1:-1;1826:33:80;-1:-1:-1;;;;;1826:19:80;;1846:3;1795:21;1826:33;:19;:33;:::i;:::-;1656:210;;;;:::o;431:177:35:-;513:22;;-1:-1:-1;;;;;513:14:35;;;:22;;;;;528:6;;513:22;;;;528:6;513:14;:22;;;;;;;512:23;508:94;;;573:6;581:9;551:40;;:::i;:::-;-1:-1:-1;;;;;551:40:35;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;;431:177:35;;:::o;579:339:39:-;677:6;-1:-1:-1;;;;;665:28:39;;694:3;699:6;665:41;;;;;-1:-1:-1;;;665:41:39;;;;;;;-1:-1:-1;;;;;665:41:39;-1:-1:-1;;;;;665:41:39;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;665:41:39;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;665:41:39;;;;742:14;739:2;;;796;793:1;790;775:24;832:1;826:8;819:16;816:2;;;868:1;865;858:12;511:4107:0;;;;;;;;;;:::o",
  "source": "pragma solidity 0.4.24;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/BurnableToken.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/MintableToken.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/DetailedERC20.sol\";\nimport \"openzeppelin-solidity/contracts/AddressUtils.sol\";\nimport \"./interfaces/IBurnableMintableERC677Token.sol\";\nimport \"./upgradeable_contracts/Claimable.sol\";\n\n/**\n* @title ERC677BridgeToken\n* @dev The basic implementation of a bridgeable ERC677-compatible token\n*/\ncontract ERC677BridgeToken is IBurnableMintableERC677Token, DetailedERC20, BurnableToken, MintableToken, Claimable {\n    bytes4 internal constant ON_TOKEN_TRANSFER = 0xa4c0ed36; // onTokenTransfer(address,uint256,bytes)\n\n    address internal bridgeContractAddr;\n\n    constructor(string _name, string _symbol, uint8 _decimals) public DetailedERC20(_name, _symbol, _decimals) {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    function bridgeContract() external view returns (address) {\n        return bridgeContractAddr;\n    }\n\n    function setBridgeContract(address _bridgeContract) external onlyOwner {\n        require(AddressUtils.isContract(_bridgeContract));\n        bridgeContractAddr = _bridgeContract;\n    }\n\n    modifier validRecipient(address _recipient) {\n        require(_recipient != address(0) && _recipient != address(this));\n        /* solcov ignore next */\n        _;\n    }\n\n    function transferAndCall(address _to, uint256 _value, bytes _data) external validRecipient(_to) returns (bool) {\n        require(superTransfer(_to, _value));\n        emit Transfer(msg.sender, _to, _value, _data);\n\n        if (AddressUtils.isContract(_to)) {\n            require(contractFallback(msg.sender, _to, _value, _data));\n        }\n        return true;\n    }\n\n    function getTokenInterfacesVersion() external pure returns (uint64 major, uint64 minor, uint64 patch) {\n        return (2, 5, 0);\n    }\n\n    function superTransfer(address _to, uint256 _value) internal returns (bool) {\n        return super.transfer(_to, _value);\n    }\n\n    function transfer(address _to, uint256 _value) public returns (bool) {\n        require(superTransfer(_to, _value));\n        callAfterTransfer(msg.sender, _to, _value);\n        return true;\n    }\n\n    function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {\n        require(super.transferFrom(_from, _to, _value));\n        callAfterTransfer(_from, _to, _value);\n        return true;\n    }\n\n    /**\n     * @dev Internal function that calls onTokenTransfer callback on the receiver after the successful transfer.\n     * Since it is not present in the original ERC677 standard, the callback is only called on the bridge contract,\n     * in order to simplify UX. In other cases, this token complies with the ERC677/ERC20 standard.\n     * @param _from tokens sender address.\n     * @param _to tokens receiver address.\n     * @param _value amount of sent tokens.\n     */\n    function callAfterTransfer(address _from, address _to, uint256 _value) internal {\n        if (isBridge(_to)) {\n            require(contractFallback(_from, _to, _value, new bytes(0)));\n        }\n    }\n\n    function isBridge(address _address) public view returns (bool) {\n        return _address == bridgeContractAddr;\n    }\n\n    /**\n     * @dev call onTokenTransfer fallback on the token recipient contract\n     * @param _from tokens sender\n     * @param _to tokens recipient\n     * @param _value amount of tokens that was sent\n     * @param _data set of extra bytes that can be passed to the recipient\n     */\n    function contractFallback(address _from, address _to, uint256 _value, bytes _data) private returns (bool) {\n        return _to.call(abi.encodeWithSelector(ON_TOKEN_TRANSFER, _from, _value, _data));\n    }\n\n    function finishMinting() public returns (bool) {\n        revert();\n    }\n\n    function renounceOwnership() public onlyOwner {\n        revert();\n    }\n\n    /**\n     * @dev Withdraws the erc20 tokens or native coins from this contract.\n     * @param _token address of the claimed token or address(0) for native coins.\n     * @param _to address of the tokens/coins receiver.\n     */\n    function claimTokens(address _token, address _to) external onlyOwner {\n        claimValues(_token, _to);\n    }\n\n    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {\n        return super.increaseApproval(spender, addedValue);\n    }\n\n    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {\n        return super.decreaseApproval(spender, subtractedValue);\n    }\n}\n",
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.0",
  "updatedAt": "2021-08-07T10:27:34.265Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "_value": "The amount of token to be burned."
        }
      },
      "claimTokens(address,address)": {
        "details": "Withdraws the erc20 tokens or native coins from this contract.",
        "params": {
          "_to": "address of the tokens/coins receiver.",
          "_token": "address of the claimed token or address(0) for native coins."
        }
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "_amount": "The amount of tokens to mint.",
          "_to": "The address that will receive the minted tokens."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "ERC677BridgeToken"
  },
  "userdoc": {
    "methods": {}
  }
}
